RSWeb:
	If (ItsLocked=1) 
		return

	Loop, 8
	{
		IniRead, ws%A_Index% , settings.ini, Web, ws%A_Index%
	}

	webSearchVar=
	IsUsingCustomQuery:=false
	WebLT := WebLT ? false : true

	ChoosingWebsite:= (SearchBased) ? false : true

	If WebLT=0
	{
		GoSub WebLClose
		return
	}
	If WebLT=1
	{
		amultiplier=1
		If (A_ScreenWidth<2000)
		{
			zfont=12
			amultiplier=1
		}
		If (A_ScreenWidth<1800)
		{
			zfont=11
			amultiplier=1
		}
		If (A_ScreenWidth<1600)
		{
			zfont=10
			amultiplier=0.92
		}
		If (A_ScreenWidth<1400)
		{
			zfont=10
			amultiplier=0.87
		}
		If (A_ScreenWidth<1050)
		{
			zfont=9
			amultiplier=0.80
		}

		Gui, WeBL:Destroy
		Gui, WebL:New, +hwndWebL
		Gui, -Border -Caption +AlwaysOnTop +LastFound +ToolWindow

		searchTextColor = f9f9f9
		lastWebSearchVar=

		If SearchBased
		{
			guiw:=520*amultiplier
			guih:=46
			Gui, Color, 172326, 172326
			Gui, Font, w1000 s12 c909090, Segoe UI Bold
			Gui, Add, Text, x16 y11 h45 w440 vSearchLabel +Hidden, Google:
			Gui, Font, w1000 s12 c%searchTextColor%, Segoe UI Bold
			Gui, Add, Edit, % "x14 y11 w" guiw-80 " h35 hwndWebSearch vwebSearchVar -E0x200 -VScroll", %webSearchVar%
			Gui, Font, w700 s22 ceeeeee, Segoe UI Black
			Gui, Add, Button, % "x+2 y-5 h45 w55 gAddCustomQuery hwndSearchBut1", •••
			Gui, Add, Button, % "x0 h45 w55 gStartSearch +Hidden hwndSearchBut2 +Default", Default
			Opt1 := [6, 0x172326, 0x172326, 0x909090]
			Opt2 := [ , 0x172326, 0x172326, 0xffffff]
		}
		else
		{
			guiw:=720*amultiplier
			guih:=204*amultiplier-25
			Gui, Color, 1e1e1e, 333333
			Gui, Font, w700 s%zfont% ceeeeee, Segoe UI Black
			Gui, Add, Progress, % "x-1 y-1 w" guiw " h22 Background333333 Disabled hwndHPROG"
			Gui, Add, Edit, % "x0 y4 w" guiw-45 " h25 hwndWebSearch vwebSearchVar -E0x200 +Center -VScroll", %webSearchVar%
			Gui, Add, Button, % "x+0 h25 w45 gStartSearch hwndSearchBut1 +Default", Go
			Opt1 := [6, 0x333333, 0x333333, 0xD0D0D0]
			Opt2 := [ , 0x333333, 0x333333, 0xffffff]
		}

		Opt4 := [0, 0xC0A0A0A0, , 0xC0606000]
		ImageButton.Create(SearchBut1, Opt1, Opt2, "", Opt4)
		buth:=(guih)/2-15
		butw:=(guiw)/4
		RSWebGuiWidth:=guiw
		RSWebGuiHeight:=guih

		If !SearchBased
		{
			Opt1 := [6, 0x232323, 0x232323, "White"]
			Opt2 := [ , 0x272727, 0x262626, 0xffffff]
			Opt4 := [0, 0xC0A0A0A0, , 0xC0606000]
			Gui, Add, Button, hwndSCHYT1 gws1 vwebname1 x0 y+0 w%butw% h%buth%, %WebName1%
			ImageButton.Create(SCHYT1, Opt1, Opt2, "", Opt4)

			Gui, Add, Button, hwndSCHYT2 gws2 vwebname2 x+0 w%butw% h%buth%, %WebName2%
			ImageButton.Create(SCHYT2, Opt1, Opt2, "", Opt4)

			Gui, Add, Button, hwndSCHYT3 vwebname3 gws3 x+0 w%butw% h%buth%, %WebName3%
			ImageButton.Create(SCHYT3, Opt1, Opt2, "", Opt4)

			Gui, Add, Button, hwndSCHYT4 vwebname4 gws4 x+0 w%butw% h%buth%, %WebName4%
			ImageButton.Create(SCHYT4, Opt1, Opt2, "", Opt4)

			Gui, Add, Button, hwndSCHYT5 vwebname5 gws5 x0 y+0 w%butw% h%buth%, %WebName5%
			ImageButton.Create(SCHYT5, Opt1, Opt2, "", Opt4)

			Gui, Add, Button, hwndSCHYT6 vwebname6 gws6 x+0 w%butw% h%buth%, %WebName6%
			ImageButton.Create(SCHYT6, Opt1, Opt2, "", Opt4)

			Gui, Add, Button, hwndSCHYT7 vwebname7 gws7 x+0 w%butw% h%buth%, %WebName7%
			ImageButton.Create(SCHYT7, Opt1, Opt2, "", Opt4)

			Gui, Add, Button, hwndSCHYT8 vwebname8 gws8 x+0 w%butw% h%buth% , %WebName8%
			ImageButton.Create(SCHYT8, Opt1, Opt2, "", Opt4)
		}

		If SearchBased
		{
			WinSet, Transparent, 245
			WinSet, Region, % "0-0 w" guiw*dpi " h" guih*dpi " r12-12", ahk_id %WebL%
		}
		else
		{
			WinSet, Transparent, 0
			WinSet, Region, % "0-0 w" guiw*dpi " h" guih*dpi " r18-18", ahk_id %WebL%
		}

		If RSWebWithSearchFocused || SearchBased
		{
			Gui, Show, h%guih% w%guiw% NoActivate, %ScriptName% Speed Dial
			WinActivate
			SetTimer, SearchBasedTimer, 20
		}
		else
			Gui, Show, h%guih% w%guiw% NoActivate, %ScriptName% Speed Dial

		GoSub LoadCustomCommands

		ShAutoComplete(WebSearch)
		If !SearchBased
			FadeIn(WebL)
		HideFocusBorder(WebL)
	}
return

WebLClose:
WebLGuiEscape:
	SetTimer, SearchBasedTimer, Off
 	WebLT := false
	Gui, Tip:Destroy
	FadeOut(WebL)
	Gui, WebL:Destroy
	currentKeyword=
	ChoosingWebsite:=false
	SearchBased:=false
	RSWebWithSearchFocused:=false
return

AddCustomQuery:
AddNewCustomQuery:=true
WebLGuiContextMenu:
	if !A_GuiControl && !AddNewCustomQuery
		return
	
	if ((currentKeyword="g") || (currentKeyword="y") || (currentKeyword="maps") || (currentKeyword="tr")) && !AddNewCustomQuery
	{
		RSNotify("Not possible")
		return
	}

	if IsUsingCustomQuery || AddNewCustomQuery
		width=465
	else
		width=300

	Loop, 8
	{
		If A_GuiControl=webname%A_Index%
		{
			wnumb=%A_Index%
			break
		}
	}

	If SearchBased || AddNewCustomQuery
	{
		WebLGuiColor := "172326"
		WebLButtonColor := "27393e"
		WebLEditBackground := "283437" 
		WebLStatusColor := "131e21"
		WebLStatusBarText := AddNewCustomQuery ? "Add Custom Search Query" : "Edit Custom Search Query"
	}
	else
	{
		WebLGuiColor := "262626"
		WebLButtonColor := "3a3a3a"
		WebLEditBackground := "333333"
		WebLStatusColor := "1f1f1f"
		WebLStatusBarText := "Edit Website"
	}

 	Gui, WebEdit:New, +hwndWebEdit
	Gui, +LastFound
	WinSet, Transparent, 0
	Gui, Margin, 0, 0
	Gui, -Caption
	Gui, Color, %WebLGuiColor%, %WebLEditBackground%
	Gui, Font, s10 Bold cEEEEEE, Segoe UI
	Gui, Add, Progress, % "x-1 y-1 w" width " h26 Background" WebLStatusColor " Disabled hwndHPROG"
	Gui, Add, Text, x0 y4 w%width% Center BackgroundTrans +0x200 cb1b1b1, %WebLStatusBarText%

	Opt1 := [6, "0x" . WebLGuiColor, "0x" . WebLGuiColor, "White"]
	Opt2 := [ , "0x" . WebLGuiColor, "0x" . WebLButtonColor, 0xffffff]
	Opt4 := [0, 0xC0A0A0A0, , 0xC0606000]

	if IsUsingCustomQuery || AddNewCustomQuery
	{
		If AddNewCustomQuery
		{
			Gui, Add, Edit, % "x29 y+10 w70 h20 hwndEdit264 -E0x200 vnewkeyword +Center -VScroll",
			Gui, Add, Edit, % "x+5 w" width-58-75 " h20 hwndEdit265 -E0x200 vnewLabel +Center -VScroll",
			Gui, Add, Edit, % "x29 y+6 w" width-58 " h20 hwndEdit266 -E0x200 vnewUrl" " +Center -VScroll",
			Gui, Add, Button, % "x30 y+6 w" width/2-30 " +default h27 gSaveNewQuery hwndBut1 vSaveBtn +Center +Default", Save
			Gui, Add, Button, % "x+0 w" width/2-30 " h27 gExitWebsites hwndBut2 +Center", Cancel

			ImageButton.Create(But1, Opt1, Opt2, "", Opt4)
			ImageButton.Create(But2, Opt1, Opt2, "", Opt4)
		}
		else
		{
			Gui, Add, Edit, % "x29 y+10 w70 h20 hwndEdit264 -E0x200 vnewkeyword +Center -VScroll", %currentKeyword%
			Gui, Add, Edit, % "x+5 w" width-58-75 " h20 hwndEdit265 -E0x200 vnewLabel +Center -VScroll", % %currentKeyword%Label
			Gui, Add, Edit, % "x29 y+6 w" width-58 " h20 hwndEdit266 -E0x200 vnewUrl" " +Center -VScroll", % %currentKeyword%url
			Gui, Add, Button, % "x30 y+6 w" width/3-20 " +default h27 gEditWebsites hwndBut1 vSaveBtn +Center +Default", Save
			Gui, Add, Button, % "x+0 w" width/3-20 " h27 gDeleteCustomQuery hwndBut2 +Center", Delete
			Gui, Add, Button, % "x+0 w" width/3-20 " h27 gExitWebsites hwndBut3 +Center", Cancel

			ImageButton.Create(But1, Opt1, Opt2, "", Opt4)
			ImageButton.Create(But2, Opt1, Opt2, "", Opt4)
			ImageButton.Create(But3, Opt1, Opt2, "", Opt4)
		}

		SetEditCueBanner(Edit264, "keyword")
		SetEditCueBanner(Edit265, "Label")
		SetEditCueBanner(Edit266, "URL HERE - use {query} where the input should be")
	}
	else
	{
		Gui, Add, Edit, % "x29 y+12 w242 h18 hwndEdit264 v" A_GuiControl " -E0x200 +Center -VScroll", % %A_GuiControl%
		Gui, Add, Edit, % "x29 y+6 w242 h18 hwndEdit265 vws" wnumb " -E0x200 +Center -VScroll", % ws%wnumb%

		Gui, Add, Button, % "x30 y+6 w" width/2-30 " +default h27 gEditWebsites hwndBut1 vSaveBtn +Center +Default", Save
		ImageButton.Create(But1, Opt1, Opt2, "", Opt4)

		Gui, Add, Button, % "x+0 w" width/2-30 " h27 gExitWebsites hwndBut2 +Center", Cancel
		ImageButton.Create(But2, Opt1, Opt2, "", Opt4)
	}


	Gui, Add, Text, % "y+5 w" (width-14) " h2 vP"
	GuiControlGet, P, Pos
	H := PY + PH
	ShAutoComplete(Edit264)
	ShAutoComplete(Edit265)
	ShAutoComplete(Edit266)

	WinSet, Region, % "0-0 w" width*dpi " h" H*dpi " r12-12", ahk_id %WebEdit%
	If IsUsingCustomQuery || AddNewCustomQuery
	{
		Gui, Show, % "w" width " y" A_ScreenHeight/2+20, Web Edit
		GuiControl, Focus, SaveBtn
	}
	else
	{
		Gui, Show, % "w" width " y" A_ScreenHeight/2+204*amultiplier/2+20, Web Edit
		Send {End}
	}

	AddNewCustomQuery:=false
	FadeIn(WebEdit)
return

ExitWebsites:
	FadeOut(WebEdit)
	WinActivate, ahk_class Shell_TrayWnd
return

EditWebsites:
	Gui, Submit, NoHide

	if IsUsingCustomQuery
	{
		If !newUrl
		{
			RSNotify("Field validation error.")
			return
		}
		else if RegExMatch(newkeyword, "\W") || !newkeyword
		{
			RSNotify("Invalid keyword")
			return
		}
		else if !InStr(newUrl, "{query}")
		{
			RSNotify("{query} not found.")
			return
		}

		IniDelete, keywords.ini, %currentKeyword%

		IniWrite, %newUrl%, keywords.ini, %newkeyword%, Url
		IniWrite, %newLabel%, keywords.ini, %newkeyword%, Label

		GoSub LoadCustomQueries

		url:=newUrl
		currentKeyword := newkeyword

		SetSearchLabelText(newLabel, currentKeyword, webSearchVar, guiw)
		GuiControl, WebL:Focus, webSearchVar
	}
	else
	{
		Loop, 8
		{
			IniWrite, % ws%A_Index% , settings.ini, Web, ws%A_Index%
		}
		WebNames:= WebName1 "|" WebName2 "|" WebName3 "|" WebName4 "|" WebName5 "|" WebName6 "|" WebName7 "|" WebName8
		IniWrite, %WebNames%, settings.ini, Web, WebNames
		If ChoosingWebsite=1
		{
			WebLT:=WebLT ? false : true
			GoSub RSWeb
		}
	}

	FadeOut(WebEdit)
return

SaveNewQuery:
	Gui, Submit, NoHide

	If !newUrl
	{
		RSNotify("Field validation error.")
		return
	}	
	else if RegExMatch(newkeyword, "\W") || !newkeyword
	{
		RSNotify("Invalid keyword")
		return
	}
	else if !InStr(newUrl, "{query}")
	{
		RSNotify("{query} not found.")
		return
	}
	else
	{
		RSNotify("Successful")
	}

	IniWrite, %newUrl%, keywords.ini, %newkeyword%, Url
	IniWrite, %newLabel%, keywords.ini, %newkeyword%, Label

	GoSub LoadCustomQueries

	url:=newUrl
	IsUsingCustomQuery:=true
	currentKeyword:=newkeyword

	SetSearchLabelText(newLabel, currentKeyword, webSearchVar, guiw)

	GuiControl, WebL:Focus, webSearchVar
	FadeOut(WebEdit)
return

DeleteCustomQuery:
	Gui, Submit, NoHide

	If !currentKeyword
		return

	IniDelete, keywords.ini, %currentKeyword%
	url=

	GoSub LoadCustomQueries

	GuiControl, WebL:Move, webSearchVar, % "x14 w" guiw-85
	GuiControl, WebL:Hide, SearchLabel
	IsUsingCustomQuery:=false

	FadeOut(WebEdit)
return

SearchBasedTimer:
	if !WinActive("ahk_id" . WebL) && !WinActive("ahk_id" . WebEdit)
	{
		GoSub WebLClose
		return
	}

	Gui, WebL:Submit, NoHide
	if (webSearchVar=lastWebSearchVar)
		return

	lastWebSearchVar:=webSearchVar
	isCustomCommand := false

	for index, element in CustomCommands
	{
		el=%element%
		if (el = webSearchVar)
		{
			isCustomCommand := true
		}
	}

	if (isCustomCommand && !IsUsingCustomQuery)
	{
		searchTextColor = 7ab048
		GuiControl, WebL:+c%searchTextColor%, webSearchVar
		Gui, WebL:Color
	}
	else
	{
		searchTextColor = f9f9f9
		GuiControl, WebL:+c%searchTextColor%, webSearchVar
		Gui, WebL:Color
	}
return

LoadCustomCommands:
	CustomCommands := []

	if !FileExist(A_WorkingDir "\Configuration\CustomCommands.ahk")
    	return

	Loop, Read, % A_WorkingDir "\Configuration\CustomCommands.ahk"
	{
		Loop, Parse, A_LoopReadLine, %A_Tab%
		{
			if InStr(A_LoopField, "commandName")
			{
				StringGetPos, commandPos, A_LoopField, =, 1
				customCommand := SubStr(A_LoopField, commandPos+2)
				CustomCommands.Push(customCommand)
			}
		}
	}

return

StartSearch:
	Gui, Submit, NoHide

	previousSearch:=webSearchVar
	webSearchVar:=StrReplace(webSearchVar, "#", "%23")
	webSearchVar:=StrReplace(webSearchVar, "&", "%26")
	webSearchVar:=StrReplace(webSearchVar, "+", "%2B")
	webSearchVar:=StrReplace(webSearchVar, doublequote, "")
	Loop, Parse, webSearchVar
	{
		if (A_LoopField="." && !InStr(webSearchVar," ") && !IsUsingCustomQuery)
		{
			GoSub WebLClose
			Run, % InStr(webSearchVar, "http") ? webSearchVar : "http:" . webSearchVar
			GoSub GetBrowserNameAndActivate
			webSearchVar=
			return
		}
	}

	GoSub WebLClose

	if (isCustomCommand)
	{
		ShellRun(A_WorkingDir "\Configuration\CustomCommands.ahk", webSearchVar)
		return
	}

	if webSearchVar
	{
		if !IsUsingCustomQuery || !url
			url:="https://www.google.bg/search?q={query}"
		webSearchVar:=StrReplace(url, "{query}", webSearchVar)

		; old method: Run, %webSearchVar%,, UseErrorLevel
		; Used to run without admin priviledges
		ShellRun(webSearchVar)

		GoSub GetBrowserNameAndActivate
		webSearchVar=
		url=
	}
return

SetSearchLabelText(newLabel = "", keyword = "" ,webSearchVar = "", guiw = 540)
{
	if !newLabel
		newLabel := keyword . ":"
	searchLabelText := newLabel
	searchLabelMeasured := MeasureText(searchLabelText, "s12", "Segoe UI Bold")
	GuiControl, WebL:, webSearchVar, %webSearchVar%
	GuiControl, WebL:Move, webSearchVar, % "x" searchLabelMeasured.W+24 " w" guiw-(searchLabelMeasured.W+22)-65
	GuiControl, WebL:, SearchLabel, %searchLabelText%
	GuiControl, WebL:Show, SearchLabel
}